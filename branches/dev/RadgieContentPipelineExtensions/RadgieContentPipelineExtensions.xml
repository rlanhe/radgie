<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>RadgieContentPipelineExtensions</name>
  </assembly>
  <members>
    <member name="N:RadgieContentPipelineExtensions.Graphics.ModelFile">
    </member>
    <member name="T:RadgieContentPipelineExtensions.Graphics.ModelFile.GeometryContent">
    </member>
    <member name="T:RadgieContentPipelineExtensions.Graphics.ModelFile.ModelFileContent">
    </member>
    <member name="M:RadgieContentPipelineExtensions.Graphics.ModelFile.ModelFileContent.AddMeshPart(RadgieContentPipelineExtensions.Graphics.ModelFile.GeometryContent,Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent)">
      <param name="geometryContent">
</param>
      <param name="materialContent">
</param>
    </member>
    <member name="T:RadgieContentPipelineExtensions.Graphics.ModelFile.ModelFileProcessor">
    </member>
    <member name="M:RadgieContentPipelineExtensions.Graphics.ModelFile.ModelFileProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <param name="input">
</param>
      <param name="context">
</param>
    </member>
    <member name="P:RadgieContentPipelineExtensions.Graphics.ModelFile.ModelFileProcessor.GenerateTangentFrames">
      <summary>
Gets or sets a value indicating whether .</summary>
    </member>
    <member name="P:RadgieContentPipelineExtensions.Graphics.ModelFile.ModelFileProcessor.DefaultMaterial">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:RadgieContentPipelineExtensions.XmlFile">
    </member>
    <member name="T:RadgieContentPipelineExtensions.XmlFile.XmlFileConfigurator">
    </member>
    <member name="M:RadgieContentPipelineExtensions.XmlFile.XmlFileConfigurator.Add(RadgieContentPipelineExtensions.XmlFile.XmlFileConfigurator.XmlFileConfiguratorEntry)">
      <param name="entry">
</param>
    </member>
    <member name="M:RadgieContentPipelineExtensions.XmlFile.XmlFileConfigurator.Get(System.String)">
      <param name="key">
</param>
    </member>
    <member name="T:RadgieContentPipelineExtensions.XmlFile.XmlFileContent">
    </member>
    <member name="M:RadgieContentPipelineExtensions.XmlFile.XmlFileContent.#ctor(System.String,System.String)">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000426$SL$$LE$XmlFileContent$EL$ class.</summary>
      <param name="textData">
</param>
      <param name="type">
</param>
    </member>
    <member name="M:RadgieContentPipelineExtensions.XmlFile.XmlFileContent.Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter)">
      <param name="writer">
</param>
    </member>
    <member name="P:RadgieContentPipelineExtensions.XmlFile.XmlFileContent.Text">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:RadgieContentPipelineExtensions.XmlFile.XmlFileContent.Type">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:RadgieContentPipelineExtensions.XmlFile.XmlFileImporter">
      <summary>
Lee el fichero del disco y lo deja en memoria.</summary>
    </member>
    <member name="M:RadgieContentPipelineExtensions.XmlFile.XmlFileImporter.Import(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext)">
      <summary>
Este método es llamado durante la generación de los ficheros xnb. Carga el contenido del fichero y lo deja en memoria.</summary>
      <param name="filename">
Path hasta el fichero.</param>
      <param name="context">
Contexto del importer.</param>
    </member>
  </members>
</doc>
